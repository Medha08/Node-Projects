<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>ChatCat - <%= room %></title>
    <link rel="stylesheet" href="/css/chatroomStyles.css" />
    <script src="/js/jquery-2.1.4.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script
      src="https://widget.cloudinary.com/v2.0/global/all.js"
      type="text/javascript"
    ></script>
    <script>
      $(() => {
        let socket = io("/chatter"); 
        let roomId = "<%= roomId %>";
        let userName = "<%= user.name %>";
        let userPic = "<%= user.profilePic %>";
        let chatUsers = $(".chatUsers");
        let chatInput = $("input[name=userInput]");
        let chatBlock = $(".chatMessages");
        let uploadFile = $("#uploadFile");

        socket.on("connect", () => {
          console.log("Connected");
          socket.emit("join", {
            roomId,
            userName,
            userPic
          });
        });

        let userList = user => {
          return `<div class="userBlock">
            <div class="userPic">
              <img src=${user.userPic}  %>" alt=${user.userName} />
            </div>
            <div class="cuserName">${user.userName}</div>
          </div>`;
        };

        let updateMessageBlock = (userPic, message) => {
          let template = `
          <div class = "chatBlock">
            <div class="userPic"><img src = "${userPic}" /></div>
              <div class="chatMsg">
               ${message}
              </div>
            </div>
          </div>`;

          $(template)
            .hide()
            .prependTo(chatBlock)
            .slideDown(200);
        };

        socket.on("updateUserList", data => {
          let parsedData = JSON.parse(data);
          let userListData = "";
          for (let user of parsedData) {
            userListData += userList(user);
          }
          // console.log("UserListData", userListData);
          chatUsers.html("").html(userListData);
        });

        chatInput.on("keyup", function(evt) {
          evt.preventDefault();

          let messageDiv = $(this); // not used arrow func as won't get div via $(this)if used as Arrow functions do not bind their own this, instead, they inherit the one from the parent scope, which is called "lexical scoping".
          if (evt.which === 13 && messageDiv.val() !== " ") {
            // match the key pressed and not blank
            let message = messageDiv.val();
            socket.emit("newMessage", {
              roomId,
              userName,
              userPic,
              message
            });
            //Update the Local Feed
            updateMessageBlock(userPic, message);
            messageDiv.val("");
          }
        });
        socket.on("messagesUpdate", data => {
          let parsedData = JSON.parse(data);
          updateMessageBlock(parsedData.userPic, parsedData.message);
        });

        uploadFile.on("click", function(evt) {
          cloudinary.openUploadWidget(
            { cloud_name: "dhnthfluu", upload_preset: "fheeduqs" },
            function(error, result) {
              if (!error && result.event === "success") {
                console.log("Result", result);
                let tmp = "";
                tmp += `<img src=${result.info.url}></img>`;
                updateMessageBlock(userPic, tmp);
                socket.emit("newMessage", {
                  roomId,
                  userName,
                  userPic,
                  message: tmp
                });
              }
            }
          );
        });
      });
    </script>
  </head>
  <body>
    <div class="container">
      <div class="titlePanel">
        <h1>ChatCAT | <%= room %></h1>
      </div>
      <div class="controls">
        <div class="userPicHolder">
          <img src="<%= user.profilePic %>" alt= <%= user.name %>/>
        </div>
        <p class="userName"><%= user.name %></p>
        <a href="/rooms" id="roomsBtn">Rooms</a>
        <a href="/logout" id="logOutBtn">Logout</a>
      </div>
      <div class="chatListDiv">
        <div class="chatMessagesPanel">
          <div class="chatMessages"></div>
          <div class="typePanel">
            <input
              type="text"
              name="userInput"
              placeholder="Type here and press enter"
            />
            <a href="#" id="uploadFile" class="fileUploadBtn">Photo</a>
          </div>
        </div>
        <div class="chatUsers">
          <!-- Loop this for chat users -->

          <!-- loop end -->
        </div>
      </div>
    </div>
  </body>
</html>
